[{"/Users/chetan/Development/node/react-treeview/src/index.tsx":"1","/Users/chetan/Development/node/react-treeview/src/reportWebVitals.ts":"2","/Users/chetan/Development/node/react-treeview/src/App.tsx":"3","/Users/chetan/Development/node/react-treeview/src/Tree.tsx":"4","/Users/chetan/Development/node/react-treeview/src/utils/string.extensions.ts":"5","/Users/chetan/Development/node/react-treeview/src/AppAccordian.tsx":"6","/Users/chetan/Development/node/react-treeview/src/Datagrid.tsx":"7"},{"size":500,"mtime":1607399286080,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1607399286080,"results":"10","hashOfConfig":"9"},{"size":297,"mtime":1607832101009,"results":"11","hashOfConfig":"9"},{"size":1855,"mtime":1607907401926,"results":"12","hashOfConfig":"9"},{"size":417,"mtime":1607657447618,"results":"13","hashOfConfig":"9"},{"size":1304,"mtime":1607910261100,"results":"14","hashOfConfig":"9"},{"size":3119,"mtime":1607910532882,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"jqiqh0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/chetan/Development/node/react-treeview/src/index.tsx",[],["33","34"],"/Users/chetan/Development/node/react-treeview/src/reportWebVitals.ts",[],"/Users/chetan/Development/node/react-treeview/src/App.tsx",["35"],"import React from 'react';\nimport './App.css';\nimport AppAccordian from './AppAccordian';\nimport  TreeView from './Tree'\nimport Datagrid from './Datagrid'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TreeView/>\n      <AppAccordian />\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/chetan/Development/node/react-treeview/src/Tree.tsx",[],"/Users/chetan/Development/node/react-treeview/src/utils/string.extensions.ts",[],"/Users/chetan/Development/node/react-treeview/src/AppAccordian.tsx",[],"/Users/chetan/Development/node/react-treeview/src/Datagrid.tsx",["36","37","38","39","40"],"import React,{useState,useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport { DataGrid, ColDef, ValueGetterParams,ValueFormatterParams } from '@material-ui/data-grid';\nimport data from './data.json';\nimport { createStyles, makeStyles, Theme, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n \nfunction getFullName(params: ValueGetterParams) {\n  return `${params.getValue('firstName') || ''} ${\n    params.getValue('lastName') || ''\n  }`;\n}\n\nfunction handleData(data: string) {\n\n    console.log(`data=> ${data}`);\n}\n\n//let rowData:any[] = data.endpoints.map((endpoint,index)=>({id:index,...endpoint}));\n//{id:1, ...data.endpoints};\n\n//console.log(`rowData>> ${JSON.stringify(rowData)}`);\n\nconst colData:ColDef[] =[\n    { field: 'appId', headerName: 'App Id', width: 230, headerAlign:'center'},\n    { field: 'location', headerName: 'location', width: 130, headerAlign:'center' },\n    { field: 'environment', headerName: 'Environment', width: 130, headerAlign:'center' },\n    { field: 'documentUri', headerName: 'Document URL', width: 280, headerAlign:'center' },\n]\n\nconst columns: ColDef[] = [\n  { field: 'firstName', headerName: 'First name', width: 130 },\n  { field: 'lastName', headerName: 'Last name', width: 130 },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    width: 160,\n    headerAlign:'center',\n    valueGetter: getFullName,\n    sortComparator: (v1, v2, cellParams1, cellParams2) =>\n      getFullName(cellParams1).localeCompare(getFullName(cellParams2)),\n  },\n  {\n      field: 'action',\n      headerName: 'Action',\n      width: 150,\n      renderCell: (params: ValueFormatterParams) => (\n        <strong>\n          {(params.value as string)}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            style={{ marginLeft: 16 }}\n            onClick={()=>console.log(`data=> ${JSON.stringify(params.value)}`)}\n          >\n            Open\n          </Button>\n        </strong>\n      ),\n  }\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snows', firstName: 'Jon',action: 'test-1' },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei',action: 'test-2'  },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime',action: 'test-3'  },\n  { id: 4, lastName: 'Stark', firstName: 'Arya',action: 'test-4'  },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys',action: 'test-5'  },\n];\n\nexport default function Datagrid({endpoint}:any) {\n  console.log(`props passed ${JSON.stringify(endpoint)}`);\n  const classes = useStyles();\n  \n  let rowData:any[] = endpoint.map((endpoint:any,index:any)=>({id:index,...endpoint}));\n\n  console.log(`props processed ${JSON.stringify(rows)}`);\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <Typography className={classes.heading}>Testing</Typography>\n      <DataGrid autoPageSize={true} pageSize={5} rows={rowData} columns={colData} />\n    </div>\n  );\n}",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":16},{"ruleId":"45","severity":1,"message":"49","line":1,"column":15,"nodeType":"47","messageId":"48","endLine":1,"endColumn":23},{"ruleId":"45","severity":1,"message":"50","line":1,"column":24,"nodeType":"47","messageId":"48","endLine":1,"endColumn":33},{"ruleId":"45","severity":1,"message":"51","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":12},{"ruleId":"45","severity":1,"message":"52","line":25,"column":10,"nodeType":"47","messageId":"48","endLine":25,"endColumn":20},{"ruleId":"45","severity":1,"message":"53","line":42,"column":7,"nodeType":"47","messageId":"48","endLine":42,"endColumn":24},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'Datagrid' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'data' is defined but never used.","'handleData' is defined but never used.","'columns' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]