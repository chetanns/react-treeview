[{"/Users/chetan/Development/node/react-treeview/src/index.tsx":"1","/Users/chetan/Development/node/react-treeview/src/reportWebVitals.ts":"2","/Users/chetan/Development/node/react-treeview/src/App.tsx":"3","/Users/chetan/Development/node/react-treeview/src/Tree.tsx":"4","/Users/chetan/Development/node/react-treeview/src/utils/string.extensions.ts":"5","/Users/chetan/Development/node/react-treeview/src/AppAccordian.tsx":"6","/Users/chetan/Development/node/react-treeview/src/Datagrid.tsx":"7","/Users/chetan/Development/node/react-treeview/src/TestAccordian.tsx":"8","/Users/chetan/Development/node/react-treeview/src/components/Todos.tsx":"9","/Users/chetan/Development/node/react-treeview/src/components/GridItem.tsx":"10","/Users/chetan/Development/node/react-treeview/src/components/Tab.tsx":"11"},{"size":449,"mtime":1609559761651,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1607399286080,"results":"14","hashOfConfig":"13"},{"size":716,"mtime":1610252043031,"results":"15","hashOfConfig":"13"},{"size":1855,"mtime":1607907401926,"results":"16","hashOfConfig":"13"},{"size":417,"mtime":1607657447618,"results":"17","hashOfConfig":"13"},{"size":1304,"mtime":1607910261100,"results":"18","hashOfConfig":"13"},{"size":3119,"mtime":1607910532882,"results":"19","hashOfConfig":"13"},{"size":802,"mtime":1608253818835,"results":"20","hashOfConfig":"13"},{"size":8244,"mtime":1610325237862,"results":"21","hashOfConfig":"13"},{"size":1718,"mtime":1609461870710,"results":"22","hashOfConfig":"13"},{"size":4303,"mtime":1610329148625,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"jqiqh0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/chetan/Development/node/react-treeview/src/index.tsx",[],["52","53"],"/Users/chetan/Development/node/react-treeview/src/reportWebVitals.ts",[],"/Users/chetan/Development/node/react-treeview/src/App.tsx",["54","55","56","57","58","59","60"],"import React from \"react\";\nimport \"./App.css\";\nimport AppAccordian from \"./AppAccordian\";\nimport todos from \"./resources/data.json\";\nimport TreeView from \"./Tree\";\nimport Datagrid from \"./Datagrid\";\nimport TestAccordian from \"./TestAccordian\";\nimport Todos from \"./components/Todos\";\nimport GridItem from \"./components/GridItem\";\nimport Tab from \"./components/Tab\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/*\n      <TreeView/>\n      <AppAccordian />\n      \n      <TestAccordian preview='test'>\n        Tesintindflknlfnvldflk\n      </TestAccordian>\n      \n      \n      \n      <GridItem />\n      \n      <Todos data={todos} />\n      \n      */}\n      <Tab />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/chetan/Development/node/react-treeview/src/Tree.tsx",[],["61","62"],"/Users/chetan/Development/node/react-treeview/src/utils/string.extensions.ts",[],"/Users/chetan/Development/node/react-treeview/src/AppAccordian.tsx",[],"/Users/chetan/Development/node/react-treeview/src/Datagrid.tsx",["63","64","65","66","67"],"import React,{useState,useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport { DataGrid, ColDef, ValueGetterParams,ValueFormatterParams } from '@material-ui/data-grid';\nimport data from './data.json';\nimport { createStyles, makeStyles, Theme, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n \nfunction getFullName(params: ValueGetterParams) {\n  return `${params.getValue('firstName') || ''} ${\n    params.getValue('lastName') || ''\n  }`;\n}\n\nfunction handleData(data: string) {\n\n    console.log(`data=> ${data}`);\n}\n\n//let rowData:any[] = data.endpoints.map((endpoint,index)=>({id:index,...endpoint}));\n//{id:1, ...data.endpoints};\n\n//console.log(`rowData>> ${JSON.stringify(rowData)}`);\n\nconst colData:ColDef[] =[\n    { field: 'appId', headerName: 'App Id', width: 230, headerAlign:'center'},\n    { field: 'location', headerName: 'location', width: 130, headerAlign:'center' },\n    { field: 'environment', headerName: 'Environment', width: 130, headerAlign:'center' },\n    { field: 'documentUri', headerName: 'Document URL', width: 280, headerAlign:'center' },\n]\n\nconst columns: ColDef[] = [\n  { field: 'firstName', headerName: 'First name', width: 130 },\n  { field: 'lastName', headerName: 'Last name', width: 130 },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    width: 160,\n    headerAlign:'center',\n    valueGetter: getFullName,\n    sortComparator: (v1, v2, cellParams1, cellParams2) =>\n      getFullName(cellParams1).localeCompare(getFullName(cellParams2)),\n  },\n  {\n      field: 'action',\n      headerName: 'Action',\n      width: 150,\n      renderCell: (params: ValueFormatterParams) => (\n        <strong>\n          {(params.value as string)}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            style={{ marginLeft: 16 }}\n            onClick={()=>console.log(`data=> ${JSON.stringify(params.value)}`)}\n          >\n            Open\n          </Button>\n        </strong>\n      ),\n  }\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snows', firstName: 'Jon',action: 'test-1' },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei',action: 'test-2'  },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime',action: 'test-3'  },\n  { id: 4, lastName: 'Stark', firstName: 'Arya',action: 'test-4'  },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys',action: 'test-5'  },\n];\n\nexport default function Datagrid({endpoint}:any) {\n  console.log(`props passed ${JSON.stringify(endpoint)}`);\n  const classes = useStyles();\n  \n  let rowData:any[] = endpoint.map((endpoint:any,index:any)=>({id:index,...endpoint}));\n\n  console.log(`props processed ${JSON.stringify(rows)}`);\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <Typography className={classes.heading}>Testing</Typography>\n      <DataGrid autoPageSize={true} pageSize={5} rows={rowData} columns={colData} />\n    </div>\n  );\n}","/Users/chetan/Development/node/react-treeview/src/TestAccordian.tsx",["68"],"/Users/chetan/Development/node/react-treeview/src/components/Todos.tsx",["69","70","71","72","73","74","75","76","77"],"/Users/chetan/Development/node/react-treeview/src/components/GridItem.tsx",["78","79"],"import {\n  Checkbox,\n  createStyles,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Paper,\n  Theme,\n} from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"right\",\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      marginLeft: 500,\n      marginRight: -20,\n    },\n    itemSpacing: {\n      marginTop: theme.spacing(2),\n    },\n    strikethrough: {\n      marginTop: theme.spacing(2),\n      textDecoration: \"line-through\",\n      color: \"red\",\n    },\n  })\n);\n\nconst GridItem = () => {\n  const classes = useStyles();\n  const [completed, setCompleted] = useState(false);\n\n  const handleChange = () => {\n    setCompleted(!completed);\n    // if (completed) {\n    //   setCompleted(false);\n    // } else {\n    //   setCompleted(true);\n    // }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid\n          item\n          xs={6}\n          className={clsx(classes.itemSpacing, {\n            [classes.strikethrough]: completed,\n          })}\n        >\n          Testing1\n        </Grid>\n        <Grid item xs={6}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={completed}\n                onChange={handleChange}\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Completed\"\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default GridItem;\n",["80","81"],"/Users/chetan/Development/node/react-treeview/src/components/Tab.tsx",["82","83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":20},{"ruleId":"89","severity":1,"message":"93","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":13},{"ruleId":"89","severity":1,"message":"94","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":16},{"ruleId":"89","severity":1,"message":"95","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":16},{"ruleId":"89","severity":1,"message":"96","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":21},{"ruleId":"89","severity":1,"message":"97","line":8,"column":8,"nodeType":"91","messageId":"92","endLine":8,"endColumn":13},{"ruleId":"89","severity":1,"message":"98","line":9,"column":8,"nodeType":"91","messageId":"92","endLine":9,"endColumn":16},{"ruleId":"85","replacedBy":"99"},{"ruleId":"87","replacedBy":"100"},{"ruleId":"89","severity":1,"message":"101","line":1,"column":15,"nodeType":"91","messageId":"92","endLine":1,"endColumn":23},{"ruleId":"89","severity":1,"message":"102","line":1,"column":24,"nodeType":"91","messageId":"92","endLine":1,"endColumn":33},{"ruleId":"89","severity":1,"message":"103","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":12},{"ruleId":"89","severity":1,"message":"104","line":25,"column":10,"nodeType":"91","messageId":"92","endLine":25,"endColumn":20},{"ruleId":"89","severity":1,"message":"105","line":42,"column":7,"nodeType":"91","messageId":"92","endLine":42,"endColumn":24},{"ruleId":"89","severity":1,"message":"106","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":37},{"ruleId":"89","severity":1,"message":"107","line":5,"column":3,"nodeType":"91","messageId":"92","endLine":5,"endColumn":15},{"ruleId":"89","severity":1,"message":"108","line":6,"column":3,"nodeType":"91","messageId":"92","endLine":6,"endColumn":13},{"ruleId":"89","severity":1,"message":"109","line":17,"column":28,"nodeType":"91","messageId":"92","endLine":17,"endColumn":37},{"ruleId":"89","severity":1,"message":"101","line":17,"column":39,"nodeType":"91","messageId":"92","endLine":17,"endColumn":47},{"ruleId":"89","severity":1,"message":"110","line":20,"column":8,"nodeType":"91","messageId":"92","endLine":20,"endColumn":16},{"ruleId":"89","severity":1,"message":"111","line":21,"column":8,"nodeType":"91","messageId":"92","endLine":21,"endColumn":18},{"ruleId":"89","severity":1,"message":"112","line":25,"column":10,"nodeType":"91","messageId":"92","endLine":25,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":114,"column":55,"nodeType":"115","messageId":"116","endLine":114,"endColumn":57},{"ruleId":"113","severity":1,"message":"114","line":127,"column":55,"nodeType":"115","messageId":"116","endLine":127,"endColumn":57},{"ruleId":"89","severity":1,"message":"117","line":7,"column":3,"nodeType":"91","messageId":"92","endLine":7,"endColumn":8},{"ruleId":"89","severity":1,"message":"118","line":10,"column":10,"nodeType":"91","messageId":"92","endLine":10,"endColumn":13},{"ruleId":"85","replacedBy":"119"},{"ruleId":"87","replacedBy":"120"},{"ruleId":"89","severity":1,"message":"121","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":22},{"ruleId":"89","severity":1,"message":"122","line":78,"column":11,"nodeType":"91","messageId":"92","endLine":78,"endColumn":25},{"ruleId":"89","severity":1,"message":"123","line":100,"column":9,"nodeType":"91","messageId":"92","endLine":100,"endColumn":26},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"@typescript-eslint/no-unused-vars","'AppAccordian' is defined but never used.","Identifier","unusedVar","'todos' is defined but never used.","'TreeView' is defined but never used.","'Datagrid' is defined but never used.","'TestAccordian' is defined but never used.","'Todos' is defined but never used.","'GridItem' is defined but never used.",["124"],["125"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'data' is defined but never used.","'handleData' is defined but never used.","'columns' is assigned a value but never used.","'useReducer' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'createRef' is defined but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'FormGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Paper' is defined but never used.","'red' is defined but never used.",["124"],["125"],"'SwipeableViews' is defined but never used.","'original_todos' is assigned a value but never used.","'handleChangeIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]