[{"/Users/chetan/Development/node/react-treeview/src/index.tsx":"1","/Users/chetan/Development/node/react-treeview/src/reportWebVitals.ts":"2","/Users/chetan/Development/node/react-treeview/src/App.tsx":"3","/Users/chetan/Development/node/react-treeview/src/Tree.tsx":"4","/Users/chetan/Development/node/react-treeview/src/utils/string.extensions.ts":"5","/Users/chetan/Development/node/react-treeview/src/AppAccordian.tsx":"6","/Users/chetan/Development/node/react-treeview/src/Datagrid.tsx":"7","/Users/chetan/Development/node/react-treeview/src/TestAccordian.tsx":"8","/Users/chetan/Development/node/react-treeview/src/components/Todos.tsx":"9","/Users/chetan/Development/node/react-treeview/src/components/GridItem.tsx":"10","/Users/chetan/Development/node/react-treeview/src/components/Tab.tsx":"11"},{"size":449,"mtime":1609559761651,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1607399286080,"results":"14","hashOfConfig":"13"},{"size":433,"mtime":1610508794258,"results":"15","hashOfConfig":"13"},{"size":1855,"mtime":1607907401926,"results":"16","hashOfConfig":"13"},{"size":417,"mtime":1607657447618,"results":"17","hashOfConfig":"13"},{"size":1304,"mtime":1607910261100,"results":"18","hashOfConfig":"13"},{"size":3119,"mtime":1607910532882,"results":"19","hashOfConfig":"13"},{"size":802,"mtime":1608253818835,"results":"20","hashOfConfig":"13"},{"size":4770,"mtime":1610508711625,"results":"21","hashOfConfig":"13"},{"size":1718,"mtime":1609461870710,"results":"22","hashOfConfig":"13"},{"size":6663,"mtime":1610508584945,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"jqiqh0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chetan/Development/node/react-treeview/src/index.tsx",[],["51","52"],"/Users/chetan/Development/node/react-treeview/src/reportWebVitals.ts",[],"/Users/chetan/Development/node/react-treeview/src/App.tsx",[],"/Users/chetan/Development/node/react-treeview/src/Tree.tsx",[],["53","54"],"/Users/chetan/Development/node/react-treeview/src/utils/string.extensions.ts",[],"/Users/chetan/Development/node/react-treeview/src/AppAccordian.tsx",[],"/Users/chetan/Development/node/react-treeview/src/Datagrid.tsx",["55","56","57","58","59"],"import React,{useState,useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport { DataGrid, ColDef, ValueGetterParams,ValueFormatterParams } from '@material-ui/data-grid';\nimport data from './data.json';\nimport { createStyles, makeStyles, Theme, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n \nfunction getFullName(params: ValueGetterParams) {\n  return `${params.getValue('firstName') || ''} ${\n    params.getValue('lastName') || ''\n  }`;\n}\n\nfunction handleData(data: string) {\n\n    console.log(`data=> ${data}`);\n}\n\n//let rowData:any[] = data.endpoints.map((endpoint,index)=>({id:index,...endpoint}));\n//{id:1, ...data.endpoints};\n\n//console.log(`rowData>> ${JSON.stringify(rowData)}`);\n\nconst colData:ColDef[] =[\n    { field: 'appId', headerName: 'App Id', width: 230, headerAlign:'center'},\n    { field: 'location', headerName: 'location', width: 130, headerAlign:'center' },\n    { field: 'environment', headerName: 'Environment', width: 130, headerAlign:'center' },\n    { field: 'documentUri', headerName: 'Document URL', width: 280, headerAlign:'center' },\n]\n\nconst columns: ColDef[] = [\n  { field: 'firstName', headerName: 'First name', width: 130 },\n  { field: 'lastName', headerName: 'Last name', width: 130 },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    width: 160,\n    headerAlign:'center',\n    valueGetter: getFullName,\n    sortComparator: (v1, v2, cellParams1, cellParams2) =>\n      getFullName(cellParams1).localeCompare(getFullName(cellParams2)),\n  },\n  {\n      field: 'action',\n      headerName: 'Action',\n      width: 150,\n      renderCell: (params: ValueFormatterParams) => (\n        <strong>\n          {(params.value as string)}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            style={{ marginLeft: 16 }}\n            onClick={()=>console.log(`data=> ${JSON.stringify(params.value)}`)}\n          >\n            Open\n          </Button>\n        </strong>\n      ),\n  }\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snows', firstName: 'Jon',action: 'test-1' },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei',action: 'test-2'  },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime',action: 'test-3'  },\n  { id: 4, lastName: 'Stark', firstName: 'Arya',action: 'test-4'  },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys',action: 'test-5'  },\n];\n\nexport default function Datagrid({endpoint}:any) {\n  console.log(`props passed ${JSON.stringify(endpoint)}`);\n  const classes = useStyles();\n  \n  let rowData:any[] = endpoint.map((endpoint:any,index:any)=>({id:index,...endpoint}));\n\n  console.log(`props processed ${JSON.stringify(rows)}`);\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <Typography className={classes.heading}>Testing</Typography>\n      <DataGrid autoPageSize={true} pageSize={5} rows={rowData} columns={colData} />\n    </div>\n  );\n}","/Users/chetan/Development/node/react-treeview/src/TestAccordian.tsx",["60"],"/Users/chetan/Development/node/react-treeview/src/components/Todos.tsx",[],"/Users/chetan/Development/node/react-treeview/src/components/GridItem.tsx",["61","62"],"import {\n  Checkbox,\n  createStyles,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Paper,\n  Theme,\n} from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"right\",\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      marginLeft: 500,\n      marginRight: -20,\n    },\n    itemSpacing: {\n      marginTop: theme.spacing(2),\n    },\n    strikethrough: {\n      marginTop: theme.spacing(2),\n      textDecoration: \"line-through\",\n      color: \"red\",\n    },\n  })\n);\n\nconst GridItem = () => {\n  const classes = useStyles();\n  const [completed, setCompleted] = useState(false);\n\n  const handleChange = () => {\n    setCompleted(!completed);\n    // if (completed) {\n    //   setCompleted(false);\n    // } else {\n    //   setCompleted(true);\n    // }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid\n          item\n          xs={6}\n          className={clsx(classes.itemSpacing, {\n            [classes.strikethrough]: completed,\n          })}\n        >\n          Testing1\n        </Grid>\n        <Grid item xs={6}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={completed}\n                onChange={handleChange}\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Completed\"\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default GridItem;\n",["63","64"],"/Users/chetan/Development/node/react-treeview/src/components/Tab.tsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":15,"nodeType":"73","messageId":"74","endLine":1,"endColumn":23},{"ruleId":"71","severity":1,"message":"75","line":1,"column":24,"nodeType":"73","messageId":"74","endLine":1,"endColumn":33},{"ruleId":"71","severity":1,"message":"76","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":12},{"ruleId":"71","severity":1,"message":"77","line":25,"column":10,"nodeType":"73","messageId":"74","endLine":25,"endColumn":20},{"ruleId":"71","severity":1,"message":"78","line":42,"column":7,"nodeType":"73","messageId":"74","endLine":42,"endColumn":24},{"ruleId":"71","severity":1,"message":"79","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":37},{"ruleId":"71","severity":1,"message":"80","line":7,"column":3,"nodeType":"73","messageId":"74","endLine":7,"endColumn":8},{"ruleId":"71","severity":1,"message":"81","line":10,"column":10,"nodeType":"73","messageId":"74","endLine":10,"endColumn":13},{"ruleId":"65","replacedBy":"82"},{"ruleId":"67","replacedBy":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'data' is defined but never used.","'handleData' is defined but never used.","'columns' is assigned a value but never used.","'useReducer' is defined but never used.","'Paper' is defined but never used.","'red' is defined but never used.",["84"],["85"],"no-global-assign","no-unsafe-negation"]